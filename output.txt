n = 1 (100.000000) complete, time = 0.000000 (0.000001)
n = 2 (100.000000) complete, time = 0.000000 (0.000001)
n = 3 (100.000000) complete, time = 0.000000 (0.000001)
n = 4 (100.000000) complete, time = 0.000000 (0.000001)
n = 5 (100.000000) complete, time = 0.000000 (0.000001)
n = 6 (100.000000) complete, time = 0.000000 (0.000001)
n = 7 (100.000000) complete, time = 0.000000 (0.000001)
n = 8 (100.000000) complete, time = 0.000000 (0.000001)
n = 9 (100.000000) complete, time = 0.000000 (0.000001)
n = 10 (100.000000) complete, time = 0.000000 (0.000001)
n = 11 (100.000000) complete, time = 0.000000 (0.000001)
n = 12 (100.000000) complete, time = 0.000000 (0.000001)
n = 13 (100.000000) complete, time = 0.000000 (0.000001)
n = 14 (100.000000) complete, time = 0.000000 (0.000001)
n = 15 (100.000000) complete, time = 0.000000 (0.000001)
n = 16 (100.000000) complete, time = 0.000000 (0.000001)
n = 17 (100.000000) complete, time = 0.000000 (0.000001)
n = 18 (100.000000) complete, time = 0.000000 (0.000001)
n = 19 (100.000000) complete, time = 0.000000 (0.000001)
n = 20 (100.000000) complete, time = 0.000000 (0.000001)
n = 21 (100.000000) complete, time = 0.000000 (0.000001)
n = 22 (100.000000) complete, time = 0.000000 (0.000001)
n = 23 (100.000000) complete, time = 0.000000 (0.000001)
n = 24 (100.000000) complete, time = 0.000000 (0.000001)
n = 25 (100.000000) complete, time = 0.000000 (0.000001)
n = 26 (100.000000) complete, time = 0.000000 (0.000001)
n = 27 (100.000000) complete, time = 0.000000 (0.000001)
n = 28 (100.000000) complete, time = 0.000000 (0.000001)
n = 29 (100.000000) complete, time = 0.000000 (0.000001)
n = 30 (100.000000) complete, time = 0.000000 (0.000001)
n = 31 (100.000000) complete, time = 0.000000 (0.000001)
n = 32 (100.000000) complete, time = 0.000000 (0.000001)
n = 33 (100.000000) complete, time = 0.000000 (0.000001)
n = 34 (100.000000) complete, time = 0.000000 (0.000001)
n = 35 (100.000000) complete, time = 0.000000 (0.000001)
n = 36 (100.000000) complete, time = 0.000000 (0.000001)
n = 37 (100.000000) complete, time = 0.000000 (0.000001)
n = 38 (100.000000) complete, time = 0.000000 (0.000001)
n = 39 (100.000000) complete, time = 0.000000 (0.000001)
n = 40 (100.000000) complete, time = 0.000000 (0.000001)
n = 41 (100.000000) complete, time = 0.000000 (0.000001)
n = 42 (100.000000) complete, time = 0.000000 (0.000001)
n = 43 (100.000000) complete, time = 0.000000 (0.000001)
n = 44 (100.000000) complete, time = 0.000000 (0.000001)
n = 45 (100.000000) complete, time = 0.000000 (0.000001)
n = 46 (100.000000) complete, time = 0.000000 (0.000001)
n = 47 (100.000000) complete, time = 0.000000 (0.000001)
n = 48 (100.000000) complete, time = 0.000000 (0.000001)
n = 49 (100.000000) complete, time = 0.000000 (0.000001)
n = 50 (100.000000) complete, time = 0.000000 (0.000001)
n = 51 (100.000000) complete, time = 0.000001 (0.000001)
n = 52 (100.000000) complete, time = 0.000001 (0.000001)
n = 53 (100.000000) complete, time = 0.000001 (0.000001)
n = 54 (100.000000) complete, time = 0.000001 (0.000001)
n = 55 (100.000000) complete, time = 0.000001 (0.000001)
n = 56 (100.000000) complete, time = 0.000001 (0.000001)
n = 57 (100.000000) complete, time = 0.000001 (0.000001)
n = 58 (100.000000) complete, time = 0.000001 (0.000001)
n = 59 (100.000000) complete, time = 0.000001 (0.000001)
n = 60 (100.000000) complete, time = 0.000001 (0.000001)
n = 61 (100.000000) complete, time = 0.000001 (0.000001)
n = 62 (100.000000) complete, time = 0.000001 (0.000001)
n = 63 (100.000000) complete, time = 0.000001 (0.000001)
n = 64 (100.000000) complete, time = 0.000001 (0.000001)
n = 65 (100.000000) complete, time = 0.000001 (0.000001)
n = 66 (100.000000) complete, time = 0.000001 (0.000001)
n = 67 (100.000000) complete, time = 0.000001 (0.000001)
n = 68 (100.000000) complete, time = 0.000001 (0.000001)
n = 69 (100.000000) complete, time = 0.000001 (0.000001)
n = 70 (100.000000) complete, time = 0.000001 (0.000001)
n = 71 (100.000000) complete, time = 0.000001 (0.000001)
n = 72 (100.000000) complete, time = 0.000001 (0.000001)
n = 73 (100.000000) complete, time = 0.000001 (0.000001)
n = 74 (100.000000) complete, time = 0.000001 (0.000001)
n = 75 (100.000000) complete, time = 0.000001 (0.000001)
n = 76 (100.000000) complete, time = 0.000001 (0.000001)
n = 77 (100.000000) complete, time = 0.000001 (0.000001)
n = 78 (100.000000) complete, time = 0.000001 (0.000001)
n = 79 (100.000000) complete, time = 0.000001 (0.000001)
n = 80 (100.000000) complete, time = 0.000001 (0.000001)
n = 81 (100.000000) complete, time = 0.000001 (0.000001)
n = 82 (100.000000) complete, time = 0.000001 (0.000001)
n = 83 (100.000000) complete, time = 0.000001 (0.000001)
n = 84 (100.000000) complete, time = 0.000001 (0.000001)
n = 85 (100.000000) complete, time = 0.000001 (0.000001)
n = 86 (100.000000) complete, time = 0.000001 (0.000001)
n = 87 (100.000000) complete, time = 0.000001 (0.000001)
n = 88 (100.000000) complete, time = 0.000001 (0.000001)
n = 89 (100.000000) complete, time = 0.000001 (0.000001)
n = 90 (100.000000) complete, time = 0.000001 (0.000001)
n = 91 (100.000000) complete, time = 0.000001 (0.000001)
n = 92 (100.000000) complete, time = 0.000001 (0.000001)
n = 93 (100.000000) complete, time = 0.000001 (0.000001)
n = 94 (100.000000) complete, time = 0.000001 (0.000001)
n = 95 (100.000000) complete, time = 0.000001 (0.000001)
n = 96 (100.000000) complete, time = 0.000001 (0.000001)
n = 97 (100.000000) complete, time = 0.000001 (0.000001)
n = 98 (100.000000) complete, time = 0.000001 (0.000001)
n = 99 (100.000000) complete, time = 0.000001 (0.000001)
n = 100 (100.000000) complete, time = 0.000001 (0.000001)

h = 0.100000, N = 100
K = 10.000000, log(K) = 1.000000
phi = 0.100000, log(phi) = -1.000000
Final maximum speed error (I) = 0.000000, log(I) = -inf

# 1)  xi_SPH_g,   2) an_v, 3  ) num_v
#
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
-nan(ind) -nan(ind) -nan(ind)
Finish

